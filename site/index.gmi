<div class="banner">
``` Ascii art of the word “Telescope” and “vCURRV”
 _______         __
|_     _|.-----.|  |.-----.-----.----.-----.-----.-----.
  |   |  |  -__||  ||  -__|__ --|  __|  _  |  _  |  -__|
  |___|  |_____||__||_____|_____|____|_____|   __|_____|
                                           |__| vCURRV
```
</div>

> Telescope is a w3m-like browser for Gemini.

<section class="with-image">
<img src="logo.small.png" alt="the teleoscope logo: a telescope on a tripode with a city and the earth seen from space in the background, with some stars behind" title='Telescope logo -- by freezr'>
<div>

Telescope is written entirely for fun, as a hobbystic project in my free time.  As such, it lacks a ton of features you’ll find in more mature Gemini browsers, but it also has some unique ones.

=> telescope.1.MANEXT	documentation

The UI is strongly inspired from Emacs and W3M, so you’ll find some familiar concepts, such as the minibuffer or the tabline, and the default keybindigs also reflect this, but care has been taken to add keys familiar for vi and CUA users too.

=> gemini://omg.pebcak.club/~freezr/gemlog/2022-09-02-telescope-logo.gmi The awesome logo was made by freezr!
</div>
</section>

<p><a href="https://asciinema.org/a/426862" target="_blank"><img src="https://asciinema.org/a/426862.svg" /></a></p>
=> https://asciinema.org/a/426862	Asciinema record

## Install

<p class='repology'><a href='REPOLOGY_URL'><img src='REPOLOGY_BANNER' alt='distro that provide a telescope package' /></a></p>
=> REPOLOGY_URL Some distros provide a package — thanks to the maintainers!

Source code and precompiled binaries for linux are available:

=> https://github.com/omar-polo/telescope/releases/download/0.8.1/telescope-0.8.1.tar.gz telescope-0.8.1.tar.gz

=> https://git.omarpolo.com/?index_page=&path=telescope.git&action=summary git repository
=> https://codeberg.org/op/telescope/		Codeberg mirror
=> https://github.com/omar-polo/telescope	GitHub mirror

=> https://github.com/omar-polo/telescope/releases/download/0.8/telescope.amd64	telescope.amd64

The dependencies are:
* libncurses
* libevent
* libtls (from either LibreSSL or libretls)
* yacc (or GNU bison)

Once all the dependencies are installed, building is as easy as:

```Example of how to compile from source
$ curl -LO https://github.com/omar-polo/telescope/releases/download/0.8.1/telescope-0.8.1.tar.gz
$ tar xzvf telescope-0.8.1.tar.gz
$ cd telescope-0.8.1
$ ./configure
$ make
$ sudo make install # eventually
```

A SHA256 file containing the checksums is available.  However, that only checks for accidental corruption: you can use signify (SHA256.sig and the public key telescope-0.8.pub).  The hash of the current and next signify public key is also included in the SHA256.

=> https://github.com/omar-polo/telescope/releases/download/0.8.1/SHA256		SHA256
=> https://github.com/omar-polo/telescope/releases/download/0.8.1/SHA256.sig		SHA256.sig
=> https://github.com/omar-polo/telescope/releases/download/0.8.1/telescope-0.8.pub	telescope-0.8.pub
=> https://github.com/omar-polo/telescope/releases/download/0.8.1/telescope-0.9.pub	telescope-0.9.pub

```Example of how to verify the signature with signify
$ signify -C -p telescope-0.8.pub -x SHA256.sig
Signature Verified
telescope-0.8-binaries.tar.gz: OK
telescope-0.8.1.tar.gz: OK
telescope-0.8.pub: OK
telescope-0.9.pub: OK
telescope.amd64: OK
```


## Changelog

0.8.1  “Le Scarpe Volanti” buildfix release — Released May 25, 2022

* Fix the build on macos.  Reported by sikmir, thanks!


0.8 “Le Scarpe Volanti” — Released May 25, 2022

### New features
* save and restore scroll position
* new command reply-last-input; idea from a conversation with thfr@, thanks!
* allow push urls to an already opened telescope session
* autocompletions for load-url and load-current-url
* new command write-buffer (with alias w)
* new command mini-kill-whole-line for the minibuffer
* split the minibuffer input into words and try to match out of order

### Improvements
* move aliases at the top of the completions
* add alias `open' for load-url; suggested by Florian, thanks!
* update emoji-data.txt to 14.0.0
* persist the list of visited URLs to the disk
* fix builds out-of-tree
* correctly mark variables in the manpage so it's possible to jump to them
* rework completions selection: the selected entry is *always* the one used.  if nothing is selected, the minibuffer content is used instead.
* merge the ui and fs processes
* rate-limit the update of the download pane

### Bug Fixes
* fix parsing of invalid link lines
* initialize each tab' loadingev timer event
* fix the build on recent version of musl
